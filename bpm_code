#include <Adafruit_ADS1X15.h>
Adafruit_ADS1015 ads;

void setup() {
  Serial.begin(115200);
  pinMode(2, OUTPUT);
  ads.setGain(GAIN_TWOTHIRDS);  // 2/3x gain +/- 6.144V  1 bit = 3mV      0.1875mV (default)
  ads.begin();
}

int count = 0;
unsigned long* mils = new unsigned long[128];
int16_t* buff = new int16_t[128];
int16_t* peakVals = new int16_t[20];
unsigned long* peakMils = new unsigned long[20];
bool attack = false;
int releaseCount = 0;
int attackCount = 0;


void loop() {


  int16_t peakVal = ads.readADC_SingleEnded(0);

  if (peakVal > 150 && !attack) {
    if (attackCount < 20) {
      attackCount++;
    } else {
      peakVals[count] = peakVal;
      peakMils[count] = millis();
      Serial.println(peakMils[count]);
      count++;
      attack = true;
      attackCount = 0;
    }
    //Serial.println("Count:");
    //Serial.println(count);
  } else if (peakVal <= 150) {
    if (releaseCount < 20) {
      releaseCount++;
    } else {
      attack = false;
      releaseCount = 0;
    }
  }

  if (count == 19) {
    unsigned long minMils = 100000;
    for (int i = 0; i < 19; ++i) {
      if (peakMils[i + 1] - peakMils[i] < minMils) {
        minMils = peakMils[i + 1] - peakMils[i];
      }
    }
    Serial.println("BPM");
    double bpm = 60/(double)minMils * 1000 / 3;
    Serial.println(bpm);
    while (1) {};
  }

  //  while (1) {};

  //  Serial.println("End of readings, millis up next...");
  //  unsigned long minMils = 500;
  //  for (int i = 0; i < 26; ++i) {
  //    if (mils[i] - mils[i + 1] < minMils) {
  //      minMils = mils[i] - mils[i + 1];
  //    }
  //  }

  //  Serial.println(minMils);

  //  while (1) {};
}
